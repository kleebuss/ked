name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc] #, clang, cl
        include:
          # - os: windows-latest
          #   c_compiler: cl
          #   cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        # exclude:
        #   - os: windows-latest
        #     c_compiler: gcc
        #   - os: windows-latest
        #     c_compiler: clang
        #   - os: ubuntu-latest
        #     c_compiler: cl

    steps:
    - uses: actions/checkout@v3
    - name: Setup linux dependencies
      if: runner.os == 'Linux'
      run: |
        echo "CMAKE VERSION IS $(cmake --version)"
        sudo apt update
        sudo apt install -y cmake libxext-dev
        /home/runner/ked/ked/setup.sh
    - name: Configure cmake
      run: cmake -B build
    - name: Build
      run: cmake --build build/
